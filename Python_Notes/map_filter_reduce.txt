filter
-------

Built in function
filter ( function or None, sequence) -> list, tuple, string

return  filtered sequence which has a true return value from the function.
if None return all true values
return the same sequence type give as input




reduce
--------
built-in function  in module __builtin__:

reduce(...)
reduce the sequnece to a single value
reduce(function, sequence[, initial]) -> value
    Apply a function of two arguments cumulatively to the items of a sequence,
    from left to right, so as to reduce the sequence to a single value.
    For example, reduce(lambda x, y: x+y, [1, 2, 3, 4, 5]) calculates
    ((((1+2)+3)+4)+5).  If initial is present, it is placed before the items
    of the sequence in the calculation, and serves as a default when the
    sequence is empty.

map
-----
built-in function map in module __builtin__:

map(...)
map(function, sequence[, sequence, ...]) -> list

Return a list of the results of applying the function to the items of
the argument sequence(s).  If more than one sequence is given, the
function is called with an argument list consisting of the corresponding
item of each sequence, substituting None for missing values when not all
sequences have the same length.  If the function is None, return a list of
 the items of the sequence (or a list of tuples if more than one sequence).

